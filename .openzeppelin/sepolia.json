{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2Df0464A482f399A250911417D2fDe4c782666a5",
      "txHash": "0x483588057e259f8c9d52806115530c1fb24ffaa20a992d965462d49e23db032e",
      "kind": "uups"
    },
    {
      "address": "0xed62a733fCa0367999D82E9fafFd866993D74594",
      "txHash": "0xe2ca7a41435a6d526a27022af4375f29ef4ced9ae9cdd8f95f596f5983bda18e",
      "kind": "uups"
    },
    {
      "address": "0x8dEF2091e89f903e279F9284344Db541e287044D",
      "txHash": "0xedd9ab129648b40826f8893057d7e42424217ad85f0846e14a1dba36c126cd5a",
      "kind": "uups"
    }
  ],
  "impls": {
    "15535271c87122c85fc56f95fe1eb18c5d21429925941730b3c63a7b5681d897": {
      "address": "0xa144EF6B855a2D03736cE76e5d30122792BA464F",
      "txHash": "0x15b0987c235d4361b1a3f92119e66ae5fef8b782c6336f54da47285d2ddd9e20",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "sbtContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:19"
          },
          {
            "label": "activeERC20",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:22"
          },
          {
            "label": "deployedERC20",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(erc20Attribute)9421_storage)",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:25"
          },
          {
            "label": "activeMinter",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:28"
          },
          {
            "label": "storedERC20",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:31"
          },
          {
            "label": "managerWhiteList",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:34"
          },
          {
            "label": "ctiWhiteList",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:37"
          },
          {
            "label": "ctiHoldERC20",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AuthManager",
            "src": "contracts/auth/AuthManager.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(erc20Attribute)9421_storage)": {
            "label": "mapping(address => struct AuthManager.erc20Attribute)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(erc20Attribute)9421_storage": {
            "label": "struct AuthManager.erc20Attribute",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenType",
                "type": "t_uint8",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "853c0feca4a4b4eae38c11f24237ae660aeb1d2f41c902fd2b84d5f5daff872e": {
      "address": "0xc1969d134f790B036Fe03238770c79311f9E4D79",
      "txHash": "0x3036bb24444bd785a7548a7582056585e507a3bca43596b63656fa371f46f2ee",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:15"
          },
          {
            "label": "_isLocked",
            "offset": 0,
            "slot": "1",
            "type": "t_bool",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:19"
          },
          {
            "label": "authContract",
            "offset": 1,
            "slot": "1",
            "type": "t_address",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:21"
          },
          {
            "label": "_tokenActivity",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:35"
          },
          {
            "label": "_deadLockedToken",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:37"
          },
          {
            "label": "soulBoundAttributes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(KYCAttribute)11023_storage)",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:39"
          },
          {
            "label": "isMinted",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:41"
          },
          {
            "label": "holdToknes",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:43"
          },
          {
            "label": "minterHolderTokens",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:45"
          },
          {
            "label": "minterTypes",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_array(t_uint8)dyn_storage)",
            "contract": "KYCSoulBound",
            "src": "contracts/auth/KYCSoulBound.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)602_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)980_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(address => uint8[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(KYCAttribute)11023_storage)": {
            "label": "mapping(uint256 => struct KYCSoulBound.KYCAttribute)",
            "numberOfBytes": "32"
          },
          "t_struct(KYCAttribute)11023_storage": {
            "label": "struct KYCSoulBound.KYCAttribute",
            "members": [
              {
                "label": "minter",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "verifyType",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isVerifiedToken",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              },
              {
                "label": "fromTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "expireTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7687ef1c0b2ade92e9f658a3de39b85fb5ce1df06ddc85ce005ef845ccde1b17": {
      "address": "0x86bCE3879C4A90F06fDa2C29e6611888Ae1a2cBD",
      "txHash": "0x9683ffa95f5a3486a2385d0eba3ba501fb584dcd845236f93f453a7f6ca8adb0",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "tokenType",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "CERC20Token",
            "src": "contracts/auth/CERC20Token.sol:14"
          },
          {
            "label": "_decimal",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8",
            "contract": "CERC20Token",
            "src": "contracts/auth/CERC20Token.sol:17"
          },
          {
            "label": "authContract",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "CERC20Token",
            "src": "contracts/auth/CERC20Token.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)360_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)980_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
